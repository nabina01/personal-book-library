// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int     @id @default(autoincrement())
  name            String?
  email           String  @unique
  password        String
  phone_number    String?
  profile_picture String?
}

model Books {
  id                Int     @id @default(autoincrement())
  title             String
  pages             Int
  published_date    DateTime
  blurb             String?
  cover_image       String?
  
   genreId          Int?   
  genre             Genres? @relation(fields: [genreId], references: [id])
  BooksAuthors      BooksAuthors[]
}

model Authors {
  id   Int     @id @default(autoincrement())
  name String?
  bio  String
  BooksAuthors      BooksAuthors[]
}

model Genres {
  id    Int     @id @default(autoincrement())  
  name  String
  books Books[]
}

model BooksAuthors{
  id            Int     @id @default(autoincrement())
  booksId       Int
  authorId      Int

  Books Books @relation(fields: [booksId], references: [id])
  Authors Authors @relation(fields: [authorId], references: [id])
}
model UserRead {
  id           Int      @id @default(autoincrement())
  userId       Int
  bookId       Int
  status       String   @default("Wants to Read")
  review       String?
  favorite     Boolean  @default(false)
  summary      String?
  currentPage  Int?     @default(0)
  readingGoal  DateTime?
  rating       Int?
}
